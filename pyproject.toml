[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "ChainComposer"
version = "0.0.1"
description = "A tool to quickly and easily build complex LLM chains. Chain Composer is a sophisticated wrapper around core LangChain functionality allowing for quickly building complex multi-layer LLM chains."
authors = [
    { name = "Spencer Presley", email = "spencerpresley96@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "langchain==0.3.7",
    "langchain_anthropic==0.3.0",
    "langchain_core==0.3.19",
    "langchain_google_genai==2.0.5",
    "langchain_openai==0.2.9",
    "openai==1.58.1",
    "pydantic==2.9.2",
    "platformdirs==4.3.6",
]

[project.optional-dependencies]
docs = [
    "sphinx",
    "piccolo-theme",
    "sphinx-autodoc-typehints",
    "pydata-sphinx-theme",
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.1",
    "python-dotenv>=1.0.0",
]
dev = [
    "black>=23.11.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
]

[project.urls]
"Homepage" = "https://github.com/SpencerPresley/AIChainComposer"
"Bug Tracker" = "https://github.com/SpencerPresley/AIChainComposer/issues"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.1",
    "python-dotenv>=1.0.0",
]
dev = [
    "black>=23.11.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
]
docs = [
    "sphinx",
    "piccolo-theme",
    "sphinx-autodoc-typehints",
    "pydata-sphinx-theme",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=chain_composer"
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
]

[tool.coverage.run]
source = ["chain_composer"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.setuptools.packages.find]
where = ["."]
include = ["chain_composer*"]
namespaces = false